#!/usr/bin/env node

const express = require('express'),
      path = require('path'),
      api = require('../lib/api');

var app = module.exports = express.createServer();

// Configuration

app.configure(function(){
  app.set('views', path.join(__dirname, '..', 'views'));
  app.set('view engine', 'jade');
  app.use(express.bodyParser());
  app.use(express.methodOverride());
  app.use(app.router);
  app.use(express.static(path.join(__dirname, '..', 'static')));
});

app.configure('development', function(){
  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));
});

app.configure('production', function(){
  app.use(express.errorHandler());
});

// Routes

app.get('/', function(req, res) {
  res.render('index');
});

app.get('/test_user', function getTestUser(req, res) {
  api.getTestUser(function(err, user) {
    if (err) {
      res.writeHead(500);
      return res.end();
    }

    res.contentType('json');
    res.end(JSON.stringify(user));
  });
});

app.get('/assertion/:email/:password/:audience', function getAssertion(req, res) {
  api.getAssertion(req.params, function(err, assertion) {
    if (err) {
      res.writeHead(500);
      return res.end();
    }

    res.contentType('json');
    res.end(JSON.stringify(assertion));
  });
})

if (!module.parent) {
  app.listen(3000, function(){
    console.log("Express server listening on port %d in %s mode", app.address().port, app.settings.env);
  });
}

